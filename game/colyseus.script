local ColyseusClient = require "colyseus.client"
local Gamestate = require "game.gamestate"

local debug

local client
local room

local function _start_new_game(message)
	-- pass
end

local function _update_gamestate(state)
	-- vis_tiles
	for k in pairs(state.visTiles.items) do
		local tile_type = state.visTiles.items[k].glyph
		if tile_type == "" then
			tile_type = "wall"
		end
		Gamestate.set_tile(k, tile_type)
	end
	msg.post("/vismap/factories#vis_tiles", "update_vis_tiles")

	-- vis_actors
	for id in pairs(state.visActors.items) do
		local pos = state.visActors.items[id].pos
		local actor_type = state.visActors.items[id].glyph
		Gamestate.set_actor(id, pos, actor_type)
	end
	msg.post("/vismap/factories#vis_actors", "update_vis_actors")
end

local function _join_room(room_id)
	client:join_by_id(room_id, {}, function(err, _room)
		if (err ~= nil) then
			print("join error: " .. err)
			return
		end

		room = _room

		room:on("statechange", function(state)
			_update_gamestate(state)
		end)
	end)
end

local function _setup_colyseus()
	if debug then
		client = ColyseusClient.new("ws://localhost:2567")
	else
		client = ColyseusClient.new("wss://dpbtbu.us-east-vin.colyseus.net")
	end

	local room_id = Gamestate.get_room_id()
	_join_room(room_id)
end

function init(self)
	debug = sys.get_engine_info().is_debug
	
	_setup_colyseus()
end