local monarch = require "monarch.monarch"
local Gamestate = require "game.gamestate.gamestate"
local debug

web_build = false

local function update_button(button)
	if button.over_now then
		gui.play_flipbook(button.node, "mottle_button_hover")
	elseif button.out_now then
		gui.play_flipbook(button.node, "mottle_button")
	end
end

local function goto_start_menu(self)
	msg.post("#", "show_background")
	msg.post("#", "show_menu", { menu = "start_menu" })
end

local function goto_game(self)
	monarch.clear()
	monarch.hide(hash("background"))

	msg.post("controller#game_proxy", "enable")
end

local function goto_end_splash(self)
	if monarch.is_visible("quit_modal") then monarch.hide("quit_modal") end

	monarch.show("end_splash")
end

function on_message(self, message_id, message)
	if message_id == hash("goto_game") then
		goto_game(self)
	elseif message_id == hash("show_background") then
		monarch.show(hash("background"), { no_stack = true })
	elseif message_id == hash("show_menu") then
		monarch.replace(hash(message.menu))
	elseif message_id == hash("goto_end_splash") then
		goto_end_splash(self)
	elseif message_id == hash("goto_start_menu") then
		goto_start_menu(self)
	end
end

function init(self)
	debug = sys.get_engine_info().is_debug

	if sys.get_sys_info().system_name == "HTML5" then
		web_build = true
	end
	
	if debug then
		print("DEBUG MODE")
	end

	goto_start_menu(self)
	msg.post("controller#game_proxy", "load")

	msg.post(".", "acquire_input_focus")
end